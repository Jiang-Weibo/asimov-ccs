.general_setup:
  before_script:
  except:
    variables:
      - $NIGHTLY

.setup_gnu:
  before_script:
    - source setup_gitlab_runner_env
    - source ${GNU_SETUP} 32bit

.setup_intel:
  before_script:
    - source setup_gitlab_runner_env
    - source ${INTEL_SETUP} 32bit

.setup_cray:
  before_script:
    - source setup_gitlab_runner_env

.setup_cray_A2:
  tags:
    - ARCHER2
  variables:
    ON_COMPUTE: "TRUE"
    SLURM_job_name: gitlab-ci-job
    SLURM_account: i246
    SLURM_partition: serial
    SLURM_qos: serial
    SLURM_time: "00:10:00"
    SLURM_ntasks: 5
  before_script:
    - source ${CRAY_SETUP}

.test_common:
  artifacts:
    when: always
    reports:
      junit: tests/report.xml


#-----------------------------------------------------------------------------#

debug_build_gnu:
  extends: [.general_setup, .setup_gnu]
  script:
    - HOME=${CI_HOME} CMP=gnu BUILD=debug make all
  allow_failure: true

build_gnu:
  extends: [.general_setup, .setup_gnu]
  script:
    - HOME=${CI_HOME} CMP=gnu make obj
  artifacts:
    paths: [obj/]

test_gnu:
  needs: 
    - job: build_gnu
      artifacts: true
  extends: [.general_setup, .setup_gnu, .test_common]
  script:
    - HOME=${CI_HOME} CMP=gnu make tests

#-----------------------------------------------------------------------------#

debug_build_intel:
  extends: [.general_setup, .setup_intel]
  script:
    - HOME=${CI_HOME} CMP=intel BUILD=debug make all
  allow_failure: true

build_intel:
  extends: [.general_setup, .setup_intel]
  script:
    - HOME=${CI_HOME} CMP=intel make obj
  artifacts:
    paths: [obj/]

test_intel:
  needs: 
    - job: build_intel
      artifacts: true
  extends: [.general_setup, .setup_intel, .test_common]
  script:
    - HOME=${CI_HOME} CMP=intel make tests

#-----------------------------------------------------------------------------#

debug_build_intelx:
  extends: [.general_setup, .setup_intel]
  script:
    - HOME=${CI_HOME} CMP=intelx BUILD=debug make all
  allow_failure: true

build_intelx:
  extends: [.general_setup, .setup_intel]
  script:
    - HOME=${CI_HOME} CMP=intelx make obj
  artifacts:
    paths: [obj/]

test_intelx:
  needs: 
    - job: build_intelx
      artifacts: true
  extends: [.general_setup, .setup_intel, .test_common]
  script:
    - HOME=${CI_HOME} CMP=intelx make tests

#-----------------------------------------------------------------------------#
#don't run cray debug build because it fails on the CI
.debug_build_cray:
  extends: [.general_setup, .setup_cray]
  script:
    - HOME=${CI_HOME} cray_run_command "CMP=cray BUILD=debug make all"
  allow_failure: true

build_cray:
  extends: [.general_setup, .setup_cray]
  script:
    - HOME=${CI_HOME} cray_run_command "CMP=cray make obj"
  artifacts:
    paths: [obj/]

#don't run cray tests because slurm is broken on the CI
.test_cray:
  needs: 
    - job: build_cray
      artifacts: true
  extends: [.general_setup, .setup_cray, .test_common]
  script:
    - cray_run_command "slurmctld -vv"
    - cray_run_command "slurmd -vv"
    - HOME=${CI_HOME} cray_run_command "CMP=cray make tests"

#-----------------------------------------------------------------------------#

ARCHER2_trigger:
  extends: [.general_setup, .setup_cray_A2]
  variables:
    ON_COMPUTE: "FALSE"
  when: manual
  script:
    - echo "Manual trigger" 

debug_build_cray_A2:
  extends: [.general_setup, .setup_cray_A2]
  needs:
    - job: ARCHER2_trigger
  script:
    - CMP=cray BUILD=debug make all
  allow_failure: true

build_cray_A2:
  extends: [.general_setup, .setup_cray_A2]
  needs:
    - job: ARCHER2_trigger
  script:
    - CMP=cray make obj
  artifacts:
    paths: [obj/]

test_cray_A2:
  needs: 
    - job: build_cray_A2
      artifacts: true
    - job: ARCHER2_trigger
  extends: [.general_setup, .setup_cray_A2, .test_common]
  script:
    - CMP=cray make tests

#-----------------------------------------------------------------------------#

lint_src:
  extends: [.general_setup]
  script: 
    - bash build_tools/lint.sh lint src
    - bash build_tools/lint.sh score_each_file src
  allow_failure: true

lint_tests:
  extends: [.general_setup]
  script: 
    - bash build_tools/lint.sh lint tests
    - bash build_tools/lint.sh score_each_file tests
  allow_failure: true

#-----------------------------------------------------------------------------#

generate_ford_docs:
  extends: [.general_setup]
  script:
    - make ford
  artifacts:
    paths:
      - doc
  allow_failure: true

generate_dev_guide:
  extends: [.general_setup]
  script:
    - make dev_guide
  artifacts:
    paths:
      - dev_guide/ccs_dev_guide.pdf
  allow_failure: true

#-----------------------------------------------------------------------------#

profile_gnu:
  needs: 
    - job: build_gnu
      artifacts: false
  extends: [.general_setup, .setup_gnu]
  script:
    - HOME=${CI_HOME} CMP=gnu PROFILE=yes make all
  artifacts:
    paths:
      - opt_info.txt
  allow_failure: true

profile_intel:
  needs: 
    - job: build_intel
      artifacts: false
  extends: [.general_setup, .setup_intel]
  script:
    - HOME=${CI_HOME} CMP=intel PROFILE=yes make all
  artifacts:
    paths:
      - obj/*.html
      - ./*.html
  allow_failure: true

.profile_cray:
  needs: 
    - job: build_cray
      artifacts: false
  extends: [.general_setup, .setup_cray]
  script:
    - HOME=${CI_HOME} cray_run_command "CMP=cray PROFILE=yes make all"
  artifacts:
    paths:
      - obj/*.lst
      - ./*.lst
  allow_failure: true

#-----------------------------------------------------------------------------#

.setup_nightly:
  only:
    variables:
      - $NIGHTLY
  dependencies: []
  allow_failure: true

nightly_gnu_performance:
  extends: [.setup_nightly, .setup_gnu]
  script:
    - HOME=${CI_HOME} CMP=gnu make
    - HOME=${CI_HOME} RUNTESTS=nightly/performance CMP=gnu make tests
    - git clone https://gitlab-ci-token:${RESULTS_REPO_TOKEN}@git.ecdf.ed.ac.uk/asimov/asimov-ccs-nightly-data.git
    - asimov-ccs-nightly-data/append_data.py asimov-ccs-nightly-data/performance_results.json tests/nightly/performance/output*.txt  
    - cd asimov-ccs-nightly-data
    - git add performance_results.json
    - git -c user.name='CI' -c user.email='ci' commit -m "CI adds data"
    - git push

nightly_gnu_verification:
  needs:
    - job: nightly_gnu_performance
  extends: [.setup_nightly, .setup_gnu]
  script:
    - HOME=${CI_HOME} CMP=gnu make
    - HOME=${CI_HOME} RUNTESTS=nightly/verification CMP=gnu make tests

nightly_dummy:
  needs:
    - job: nightly_gnu_verification
  extends: [.setup_nightly, .setup_intel]
  script:
    - echo "just a test"
      #- HOME=${CI_HOME} RUNTESTS=nightly CMP=intel make tests
      #- git clone https://gitlab-ci-token:${RESULTS_REPO_TOKEN}@git.ecdf.ed.ac.uk/asimov/asimov-ccs-nightly-data.git
      #- asimov-ccs-nightly-data/append_data.py asimov-ccs-nightly-data/ccs_data.csv tests/nightly/*/output.txt  
      #- cd asimov-ccs-nightly-data
      #- git add ccs_data.csv
      #- git -c user.name='CI' -c user.email='ci' commit -m "CI adds data"
      #- git push

nightly_wiki_update:
  needs: 
    - job: nightly_dummy
  extends: [.setup_nightly]
  script:
    - git clone https://gitlab-ci-token:${WIKI_TOKEN}@git.ecdf.ed.ac.uk/asimov/asimov-ccs.wiki.git 
    - git clone https://gitlab-ci-token:${RESULTS_REPO_TOKEN}@git.ecdf.ed.ac.uk/asimov/asimov-ccs-nightly-data.git
    - cd asimov-ccs.wiki
    - ../asimov-ccs-nightly-data/plot_performance.py ../asimov-ccs-nightly-data/performance_results.json img/ci-performance-graph
    - git add img/ci-performance-graph*
    - git -c user.name='CI' -c user.email='ci' commit -m "CI updates graph"
    - git push
